version: '3.11'

services:
#  web:
#    container_name: nginx
#    build: nginx
#    volumes:
#      - ./nginx/static/images:/usr/share/nginx/html/static/images
#    ports:
#      - 80:80
#      - 443:443
#    depends_on:
#      - api
#    logging:
#      driver: "local"

#  api:
#    build:
#      context: .
#    env_file:
#      - .env
#    container_name: api
#    expose:
#      - 5555
#    ports:
#      - 5555:5000
#    depends_on:
#      - postgres
#    logging:
#      driver: "local"

  redis:
    image: redis:7
    container_name: redis
    # На случай, если в Docker уже есть запущенные контейнеры с redis на порту 5370
    command: --port 5370
    expose:
      - 5370

  celery:
    # Т.к. Celery это не отдельная технология как PostgresSQL или Redis, а просто пакет, используемый в приложении,
    # то в качестве образа используется та же сборка (Dockerfile), что и при разворачивании контейнера с приложением
    build:
      context: .
    # Файл с переменными окружения для использования в приложении
    env_file:
      - .env
    container_name: celery
    # Команды для запуска Celery в отдельном файле
    # "celery" - передаем аргумент в команду, прописанную в файле celery.sh
    command: [ "/docker/celery.sh", "celery" ]
    # Зависимость (контейнер с celery запуститься только после запуска контейнера с redis)
    depends_on:
      - redis

  flower:
    # Т.к. flower это не отдельная технология как PostgresSQL или Redis, а просто пакет, используемый в приложении,
    # то в качестве образа используется та же сборка (Dockerfile), что и при разворачивании контейнера с приложением
    build:
      context: .
    # Файл с переменными окружения для использования в приложении
    env_file:
      - .env
    # Название контейнера
    container_name: flower
    # Команды для запуска flower
    # Тот же файл, что и для запуска celery, просто передаем другой аргумент и выполнится другая команда
    # "flower" - передаем аргумент в команду, прописанную в файле celery.sh
    command: [ "/docker/celery.sh", "flower" ]
    # Зависимость (контейнер с flower запуститься только после запуска контейнера с redis и celery)
    depends_on:
      - redis
      - celery
    # Порты, чтобы можно было руками зайти и просмотреть запущенные воркеры и задачи в фоне
    # порт на ПК: порт в контейнере
    ports:
      - 8888:5555

  postgres:
    image: postgres:15
    container_name: postgres
    command: -p 5432
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER:?err}
      - POSTGRES_PASSWORD=${DB_PASS:?err}
      - POSTGRES_DB=${DB_NAME:?err}
    env_file:
      - .env
    volumes:
      - ./postgres_db/:/var/lib/postgresql/data